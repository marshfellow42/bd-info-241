#!/bin/bash

apk update

apk upgrade

cat <<EOF > docker-compose.yml
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql

volumes:
  mysql_data:
EOF

echo

# Esse while True serve para só progredir quando o usuário colocar o login dele corretamente, caso contrário, o script inteiro não irá rodar pela falta de dependências necessárias

# $? armazena o código de saída do último comando executado
# 0 indica que o comando foi bem-sucedido
# Qualquer valor diferente de 0 indica que houve um erro
# A comparação [-eq] verifica se $? "é igual a" 0
# Se for igual a 0, significa que o último comando executou com sucesso

while true; do
    docker login
    if [ $? -eq 0 ]; then
        break
    else
        echo
    fi
done

echo

docker-compose up -d

echo

pip install mysql-connector-python tqdm

echo

cat <<EOF > progress_bar.py
import time
from tqdm import tqdm

total_time = 20
interval = 0.1

for _ in tqdm(range(int(total_time / interval)), desc="Iniciando o servidor MySQL", bar_format="{l_bar}{bar}"):
    time.sleep(interval)
EOF

python progress_bar.py

echo

echo "O servidor MySQL foi iniciado!"

echo

sleep 1

cat <<EOF > script.py
import mysql.connector

mydb = mysql.connector.connect(
  host="localhost",
  user="myuser",
  password="mypassword",
  database="mydatabase"
)

mycursor = mydb.cursor()

mycursor.execute("""CREATE TABLE IF NOT EXISTS TB_ALUNOS (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome TEXT
);""")

mycursor.execute("""CREATE TABLE IF NOT EXISTS TB_PROFESSOR (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome TEXT
);""")

mycursor.execute("""CREATE TABLE IF NOT EXISTS TB_DISCIPLINA (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome TEXT
);""")

mycursor.execute("""CREATE TABLE IF NOT EXISTS Matricula (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_aluno INT,
    id_professor INT,
    id_disciplina INT,
    nota_N1 FLOAT,
    nota_N2 FLOAT,
    media FLOAT,
    faltas INT,
    Aprovado_SN BOOLEAN,
    FOREIGN KEY (id_aluno) REFERENCES TB_ALUNOS(id),
    FOREIGN KEY (id_professor) REFERENCES TB_PROFESSOR(id),
    FOREIGN KEY (id_disciplina) REFERENCES TB_DISCIPLINA(id)
);""")

mydb.commit()

print("TB_ALUNOS foi criado")
print("TB_PROFESSORES foi criado")
print("TB_DISCIPLINA foi criado")
print("Matricula foi criado")

mycursor.close()
mydb.close()
EOF

python script.py